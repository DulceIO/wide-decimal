name: wide_decimal
on: [push,pull_request]
jobs:
  build-and-run-gcc:
    runs-on: ubuntu-20.04
    if: "!contains(github.event.commits[0].message, '[CI SKIP]')"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: update-tools
        run: sudo apt install g++-9
      - name: update-libboost-dev
        run: sudo apt install libboost-dev
      - name: update-libboost-all-dev
        run: sudo apt install libboost-all-dev
      - name: build-and-run-gcc
        run: |
          echo "compile ./wide_decimal.exe"
          g++-9 -v
          g++-9 -finline-functions -finline-limit=32 -m64 -O3 -Wall -Wextra -pedantic -Werror -Wno-cast-function-type -std=c++11 -I. -pthread -lpthread test/test.cpp test/test_decwide_t_algebra.cpp test/test_decwide_t_examples.cpp examples/example001_roots_sqrt.cpp examples/example001a_roots_seventh.cpp examples/example001b_roots_almost_integer.cpp examples/example002_pi.cpp examples/example002a_pi_small_limb.cpp examples/example002b_pi_100k.cpp examples/example002c_pi_quintic.cpp examples/example003_zeta.cpp examples/example004_bessel_recur.cpp examples/example005_polylog_series.cpp examples/example006_logarithm.cpp examples/example007_catalan_series.cpp examples/example008_bernoulli_tgamma.cpp examples/example009_boost_math_standalone.cpp examples/example010_hypergeometric_2f1.cpp examples/example010a_hypergeometric_1f1.cpp examples/example011_trig_trapezoid_integral.cpp -o wide_decimal.exe
          echo "ls ./wide_decimal.exe"
          ls ./wide_decimal.exe
          ./wide_decimal.exe
          result_wide_decimal=$?
          echo "result_wide_decimal:"  "$result_wide_decimal"
          exit $result_wide_decimal
        shell: bash
  build-and-run-gcc-x86:
    runs-on: ubuntu-20.04
    if: "!contains(github.event.commits[0].message, '[CI SKIP]')"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: update-tools
        run: sudo apt install g++-9
      - name: update-libboost-dev
        run: sudo apt install libboost-dev
      - name: update-libboost-all-dev
        run: sudo apt install libboost-all-dev
      - name: build-and-run-gcc
        run: |
          echo "compile ./wide_decimal.exe"
          g++-9 -v
          g++-9 -finline-functions -finline-limit=32 -mx32 -O3 -Wall -Wextra -pedantic -Werror -Wno-cast-function-type -std=c++11 -I. -pthread -lpthread test/test.cpp test/test_decwide_t_algebra.cpp test/test_decwide_t_examples.cpp examples/example001_roots_sqrt.cpp examples/example001a_roots_seventh.cpp examples/example001b_roots_almost_integer.cpp examples/example002_pi.cpp examples/example002a_pi_small_limb.cpp examples/example002b_pi_100k.cpp examples/example002c_pi_quintic.cpp examples/example003_zeta.cpp examples/example004_bessel_recur.cpp examples/example005_polylog_series.cpp examples/example006_logarithm.cpp examples/example007_catalan_series.cpp examples/example008_bernoulli_tgamma.cpp examples/example009_boost_math_standalone.cpp examples/example010_hypergeometric_2f1.cpp examples/example010a_hypergeometric_1f1.cpp examples/example011_trig_trapezoid_integral.cpp -o wide_decimal.exe
          echo "ls ./wide_decimal.exe"
          ls ./wide_decimal.exe
          ./wide_decimal.exe
          result_wide_decimal=$?
          echo "result_wide_decimal:"  "$result_wide_decimal"
          exit $result_wide_decimal
        shell: bash
  build-and-run-msvc-release:
    runs-on: windows-latest
    if: "!contains(github.event.commits[0].message, '[CI SKIP]')"
    steps:
      - uses: actions/checkout@v1
      - uses: ilammy/msvc-dev-cmd@v1
      - name: build-and-run-msvc-release
        shell: cmd
        working-directory: ./
        run: |
          set INCLUDE=%cd%;%BOOST_ROOT_1_72_0%\include\boost-1_72;%INCLUDE%
          MSBuild -m wide_decimal.sln -p:useenv=true -p:Configuration=wide-decimal-release -p:Platform=x64 /t:Rebuild
          dir %cd%\wide-decimal-release-x64\wide-decimal-release-x64.exe
          %cd%\wide-decimal-release-x64\wide-decimal-release-x64.exe
